(self.webpackChunk=self.webpackChunk||[]).push([[4017],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return f}});var a=n(67294),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i().createContext({}),s=function(e){var t=i().useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=s(e.components);return i().createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i().createElement(i().Fragment,{},t)}},d=i().forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return n?i().createElement(f,r(r({ref:t},p),{},{components:n})):i().createElement(f,r({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var p=2;p<o;p++)l[p]=n[p];return i().createElement.apply(null,l)}return i().createElement.apply(null,n)}d.displayName="MDXCreateElement"},54228:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var a=n(74034),i=n(79973),o=(n(67294),n(3905)),l=["components"],r={title:"Condition node"},u=void 0,p={unversionedId:"us/help/workflow/flow_step_condition",id:"us/help/workflow/flow_step_condition",isDocsHomePage:!1,title:"Condition node",description:"System can select next step automatically according to the condition in condition node.",source:"@site/../docs/us/help/workflow/flow_step_condition.md",sourceDirName:"us/help/workflow",slug:"/us/help/workflow/flow_step_condition",permalink:"/us/help/workflow/flow_step_condition",version:"current",frontMatter:{title:"Condition node"},sidebar:"Steedos Help",previous:{title:"Countersignature Node",permalink:"/us/help/workflow/flow_step_counter_sign"},next:{title:"Approver settings",permalink:"/us/help/workflow/flow_step_user"}},s=[{value:"How to add a condition node?",id:"how-to-add-a-condition-node",children:[]}],m={toc:s};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"System can select next step automatically according to the condition in condition node."),(0,o.kt)("p",null,"For instance, in a \u201cReimbursement\u201d request, system can select next step according to \u201cTotal Amount\u201d. If total amount is more than 10000, requests will be submitted to general manager at first and then submitted to finance director after approval. If it is no more than 10000, requests will be directly submitted to finance director."),(0,o.kt)("p",null,"Conditional formula\uff1a{ Total Amount }>10000 and { Total Amount }<=10000"),(0,o.kt)("h4",{id:"notice"},"notice"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"There cannot be overlapping conditions. For instance, \u201c{Total Amount}>=10000\u201d and \u201c{Total Amount}<=10000\u201d are wrong formulas. Because \u201c{Total Amount}=10000\u201d is overlapping condition."),(0,o.kt)("li",{parentName:"ul"},"The formulas should cover all conditions. For instance, \u201c{Total Amount}>10000\u201d and \u201c{Total Amount}<10000\u201d are wrong formulas. Because \u201c{Total Amount}=10000\u201d is omitted.")),(0,o.kt)("p",null,"If there are wrong formulas, system cannot select the next step sometimes."),(0,o.kt)("h3",{id:"how-to-add-a-condition-node"},"How to add a condition node?"),(0,o.kt)("p",null,"Please follow the next step to add a node."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Enter the flow design interface and click \u201cDraw\u201d button."),(0,o.kt)("li",{parentName:"ul"},"Select \u201cCondition\u201d icon and Drag it to the left side."),(0,o.kt)("li",{parentName:"ul"},"Modify step name by clicking \u201cProperties\u201d. For instance, rename it with \u201cWhether Total Amount is more than 10000\u201d."),(0,o.kt)("li",{parentName:"ul"},"Hover with your mouse over the \u201c?\u201d icon and then click \u201c+\u201d to add two lines and connect them with two nodes."),(0,o.kt)("li",{parentName:"ul"},"Click one line and then click on \u201cproperties\u201d"),(0,o.kt)("li",{parentName:"ul"},"Input the formula \u201c{Total Amount}>10000\u201d in \u201cexecute only when\u201d box "),(0,o.kt)("li",{parentName:"ul"},"Then input the formula \u201c{Total Amount}<=10000\u201d to modify properties of the other line.")),(0,o.kt)("h4",{id:"please-refer-to-basic-rules-of-writing-conditions-for-more-details"},"Please refer to \u201cBasic rules of writing conditions\u201d for more details."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Basic rules of writing conditions\uff1a",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Characters and symbols\uff1ahalf-width"),(0,o.kt)("li",{parentName:"ul"},"Referenced fields\uff1a{field name}"),(0,o.kt)("li",{parentName:"ul"},"Nested conditions\uff1a()"),(0,o.kt)("li",{parentName:"ul"},"Formulas and functions are allowed"))),(0,o.kt)("li",{parentName:"ul"},"Common items in conditions",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Numeric constants\uff1anumber"),(0,o.kt)("li",{parentName:"ul"},"Character constants\uff1a\u201cBeijing\u201d"),(0,o.kt)("li",{parentName:"ul"},"Field variables\uff1a{field name}"))),(0,o.kt)("li",{parentName:"ul"},"System variables based on applicants",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Name\uff1a{applicant.name}"),(0,o.kt)("li",{parentName:"ul"},"Organization\uff08full path):{applicant.organization.fullname}"),(0,o.kt)("li",{parentName:"ul"},"Organization\uff08name of the lowest organization): {applicant.organization.name}"),(0,o.kt)("li",{parentName:"ul"},"Role name: {applicant.roles}"))),(0,o.kt)("li",{parentName:"ul"},"System variables based on name field in forms",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Organization\uff08full path):{name}.organization.fullname"),(0,o.kt)("li",{parentName:"ul"},"Organization\uff08name of the lowest organization): {name}.organization.name"),(0,o.kt)("li",{parentName:"ul"},"Roles: {name}.roles"),(0,o.kt)("li",{parentName:"ul"},"Name: {name}.name"))),(0,o.kt)("li",{parentName:"ul"},"Functions based on field values",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Add\uff1a{field A}+{field B}"),(0,o.kt)("li",{parentName:"ul"},"Subtract\uff1a{field A}-{field B}"),(0,o.kt)("li",{parentName:"ul"},"Multiply\uff1a{field A}*{ field B }"),(0,o.kt)("li",{parentName:"ul"},"Divide\uff1a  {field A}/{ field B }"))),(0,o.kt)("li",{parentName:"ul"},"Functions based on numeric field in tables",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"SUM: sum ({expense})"),(0,o.kt)("li",{parentName:"ul"},"AVERAGE\uff1aaverage({expense})"),(0,o.kt)("li",{parentName:"ul"},"COUNT\uff1acount({item})"),(0,o.kt)("li",{parentName:"ul"},"MAXIUM\uff1amax({expense})"),(0,o.kt)("li",{parentName:"ul"},"MINIMM\uff1amin({expense})"))),(0,o.kt)("li",{parentName:"ul"},"Conditions of numeric type",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Equal\uff1a="),(0,o.kt)("li",{parentName:"ul"},"Greater than\uff1a>"),(0,o.kt)("li",{parentName:"ul"},"Less than: <"),(0,o.kt)("li",{parentName:"ul"},"Greater than or equal to: >="),(0,o.kt)("li",{parentName:"ul"},"Less than or equal to: <=\n-Not equal to: ! = or < >"))),(0,o.kt)("li",{parentName:"ul"},"Conditions of character type",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Field A is Beijing: {Field A}= \u201cBeijing\u201d"),(0,o.kt)("li",{parentName:"ul"},"Field B is not Beijing: {Field B}!= \u201cBeijing\u201d"),(0,o.kt)("li",{parentName:"ul"},"Applicant is general manager: _.contains({applicant.roles},'general manager')")))),(0,o.kt)("h4",{id:"notice\uff1a"},"notice\uff1a"),(0,o.kt)("p",null,"A user can act as several roles, so we use \u201ccontain\u201d this condition."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Combination of conditions",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"OR\uff1a|| ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"E.g.{Total Amount}<1000 || {Field A}= \u201cBeijing\u201d"))),(0,o.kt)("li",{parentName:"ul"},"AND: &&",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"E.g. {Total Amount}<1000 && {Field A}= \u201cBeijing\u201d"))),(0,o.kt)("li",{parentName:"ul"},"INVERT: !",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"E.g. !({Total Amount}<1000))")))))))}c.isMDXComponent=!0}}]);